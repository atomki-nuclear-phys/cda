#
# Continuous Integration configuration for all build configurations:
#

# The build stages to test individually:
stages:
   - check
   - config
   - build
   - deploy

# Global configurations for the CI's behaviour
variables:
   GIT_STRATEGY: fetch
   DISABLE_FLAGS: "-DCDA_USE_ROOT:BOOL=FALSE -DCDA_USE_CERNLIB:BOOL=FALSE -DCDA_USE_CC32:BOOL=FALSE -DCDA_USE_CAENDIGITIZER:BOOL=FALSE -DCDA_USE_CAENQTPSDK:BOOL=FALSE"

# Run the pre-commit checks.
pre-commit:
   tags:
      - gitlab-org-docker
   stage: check
   image: ubuntu:24.04
   script:
      - apt-get update
      - apt-get install -y pre-commit git
      - pre-commit run --all-files

# Configuration job template
.config_template: &config_job
   tags:
      - gitlab-org-docker
   stage: config
   script:
      - mkdir ci_build
      - cd ci_build/
      - cmake -DCMAKE_BUILD_TYPE:STRING=Release -DCDA_FAIL_ON_WARNINGS:BOOL=TRUE ${CONFIG_FLAGS} ../
   artifacts:
      paths:
         - ci_build/

# Test the project's configuration on Ubuntu-12.04, with all available externals
# used:
config:ubuntu1204full:
   <<: *config_job
   image: registry.gitlab.com/atomki-nuclear-phys/cda/reference-os:ubuntu-12.04-v1

# Test the project's configuration on Ubuntu-12.04, with all optional externals
# turned off.
config:ubuntu1204vanilla:
   <<: *config_job
   image: registry.gitlab.com/atomki-nuclear-phys/cda/reference-os:ubuntu-12.04-v1
   before_script:
      - export CONFIG_FLAGS=${DISABLE_FLAGS}

# Test the project's configuration on Ubuntu-16.04, with all available externals
# used:
config:ubuntu1604full:
   <<: *config_job
   image: registry.gitlab.com/atomki-nuclear-phys/cda/reference-os:ubuntu-16.04-v1

# Test the project's configuration on Ubuntu-16.04, with all optional externals
# turned off.
config:ubuntu1604vanilla:
   <<: *config_job
   image: registry.gitlab.com/atomki-nuclear-phys/cda/reference-os:ubuntu-16.04-v1
   before_script:
      - export CONFIG_FLAGS=${DISABLE_FLAGS}

# Build job template:
.build_template: &build_job
   tags:
      - gitlab-org-docker
   stage: build
   script:
      - export MAKEFLAGS=-j`nproc`
      - cmake --build ci_build/
   artifacts:
      paths:
         - ci_build/

# Build the project on top of Ubuntu-12.04 with all possible externals turned
# on:
build:ubuntu1204full:
   <<: *build_job
   image: registry.gitlab.com/atomki-nuclear-phys/cda/reference-os:ubuntu-12.04-v1
   dependencies:
      - config:ubuntu1204full

# Build the project on top of Ubuntu-12.04 with all optional externals turned
# off:
build:ubuntu1204vanilla:
   <<: *build_job
   image: registry.gitlab.com/atomki-nuclear-phys/cda/reference-os:ubuntu-12.04-v1
   dependencies:
      - config:ubuntu1204vanilla

# Build the project on top of Ubuntu-16.04 with all possible externals turned
# on:
build:ubuntu1604full:
   <<: *build_job
   image: registry.gitlab.com/atomki-nuclear-phys/cda/reference-os:ubuntu-16.04-v1
   dependencies:
      - config:ubuntu1604full

# Build the project on top of Ubuntu-16.04 with all optional externals turned
# off:
build:ubuntu1604vanilla:
   <<: *build_job
   image: registry.gitlab.com/atomki-nuclear-phys/cda/reference-os:ubuntu-16.04-v1
   dependencies:
      - config:ubuntu1604vanilla

# Build the doxygen configuration for the project:
pages:
   tags:
      - gitlab-org-docker
   stage: deploy
   image: registry.gitlab.com/atomki-nuclear-phys/cda/reference-os:ubuntu-16.04-v1
   dependencies: []
   script:
      - doxygen Doxyfile
      - mv doxygen/html/ public/
   artifacts:
      paths:
         - public
   only:
      - master
